library(dplyr)
file = as.data.frame(c(c(1,3,3),c(2,4,5)))
file
rm(file)
library(MASS)
file = data("AirPassengers")
file = data(AirPassengers)
file
rm(file, AirPassengers)
file = data(AirPassengers)
data(phones)
rm(file, AirPassengers)
head(file)
head(phones)
tmp = phones %>% top_n(20, calls)
phones = unlist(phones)
tmp = phones %>% top_n(20, calls)
head(phones)
data(AirPassengers)
rm(phones)
head(AirPassengers)
data("BJsales")
rm(AirPassengers)
data("Titanic")
head(BJsales)
head(Titanic)
View(BJsales)
View(Titanic)
rm(BJsales, BJsales.lead)
gc()
tmp = Titanic %>% top_n(10, Freq)
Titanic = as.data.frame(Titanic)
tmp = Titanic %>% top_n(10, Freq)
View(tmp)
library(data.table)
Titanic = as.data.table(Titanic)
tmp = Titanic %>% top_n(10, Freq)
View(tmp)
install.packages("shiny")
library(shiny)
runExample("01_hello")
runExample("03_reactivity")
runExample("08_html")
runExample("05Ssliders")
runExample("05_sliders")
exit()
exit
qui()
quit()
shiny::runApp('Schoolwork/NUS/1617 Sem 1/BT2101 IT and Decision Making/bt2101 Group Project/Shiny/SIA.dashboard')
text = "hello there"
split(text, " ")
split(" ", text)
strsplit(text, " ")
runApp('Schoolwork/NUS/1617 Sem 1/BT2101 IT and Decision Making/bt2101 Group Project/Shiny/SIA.dashboard')
strsplit(strsplit(text, " "), ",")
sub(" ", ",", text)
runApp('Schoolwork/NUS/1617 Sem 1/BT2101 IT and Decision Making/bt2101 Group Project/Shiny/SIA.dashboard')
strsplit(sub(",", " ", input$filterText), " ")
strsplit(sub(",", " ", text), " ")
tmp = strsplit(sub(",", " ", input$filterText), " ")
tmp = strsplit(sub(",", " ", text), " ")
tmp2 = c("hello", "hi")
tmp + tmp2
c(tmp, tmp2)
list(tmp, tmp2)
tmp
tmp2
strsplit(sub(",", " ", input$filterText), " ")
strsplit(sub(",", " ", text), " ")
strsplit(sub(",", " ", text), " ")[1]
strsplit(sub(",", " ", text), " ")[[1]]
tmp = strsplit(sub(",", " ", text), " ")[[1]]
tmp + tmp2
c(tmp, tmp2)
c("hi", tmp)
runApp('Schoolwork/NUS/1617 Sem 1/BT2101 IT and Decision Making/bt2101 Group Project/Shiny/SIA.dashboard')
library(dplyr)
library(data.table)
followees = setDT(read.csv("followees.csv", as.is = T))
country = read.csv("followers_by_country.csv", as.is = T)
country$percent.popn = country$count/country$pop * 100
country$percent.total = round(country$count / sum(country$count) * 100, 3)
country = country %>% arrange(-count)
write.csv(country, "followers_country_count.csv", row.names = F)
country$percent.popn = NULL
country$percent.total = NULL
country = setDT(country[which(country$count >= 1),])
most.countries = setDT(read.csv("most_countries_top_100.csv", as.is = T))
country.top.100 = setDT(read.csv("top_100_per_country.csv", as.is = T))
overall.top.500 = setDT(read.csv("top_500_overall.csv", as.is = T))
colnames(followees)[1] = "followee"
colnames(overall.top.500)[1] = "followee"
setkey(followees, followee)
setkey(country, country)
setkey(most.countries, followee)
setkey(country.top.100, followee)
setkey(country.top.100, country)
setkey(overall.top.500, followee)
most.countries = followees[most.countries]
overall.top.500 = followees[overall.top.500]
country.top.100 = merge(country.top.100, followees, by = "followee")
country.top.100 = merge(country.top.100, country, by = "country")
country.top.100$percent = round(country.top.100$count.x / country.top.100$count.y, 4)*100
colnames(country.top.100)[3] = "count"
most.countries$followee = NULL
overall.top.500$followee = NULL
country.top.100$followee = NULL
write.csv(most.countries %>% arrange(-count), "most_countries.csv", row.names = F)
write.csv(overall.top.500, "overall_top_500.csv", row.names = F)
write.csv(country.top.100 %>% arrange(-percent), "country_top_100.csv", row.names = F)
rm(list = ls())
library(dplyr)
library(data.table)
followees = setDT(read.csv("followees.csv", as.is = T))
country = read.csv("followers_by_country.csv", as.is = T)
country$percent.popn = country$count/country$pop * 100
country$percent.total = round(country$count / sum(country$count) * 100, 3)
country = country %>% arrange(-count)
write.csv(country, "followers_country_count.csv", row.names = F)
country$percent.popn = NULL
country$percent.total = NULL
country = setDT(country[which(country$count >= 1),])
most.countries = setDT(read.csv("most_countries_top_100.csv", as.is = T))
country.top.100 = setDT(read.csv("top_100_per_country.csv", as.is = T))
overall.top.500 = setDT(read.csv("top_500_overall.csv", as.is = T))
colnames(followees)[1] = "followee"
colnames(overall.top.500)[1] = "followee"
setkey(followees, followee)
setkey(country, country)
setkey(most.countries, followee)
setkey(country.top.100, followee)
setkey(country.top.100, country)
setkey(overall.top.500, followee)
library(dplyr)
library(data.table)
setwd("~/Schoolwork/NUS/1617 Sem 1/BT2101 IT and Decision Making/bt2101 Group Project/Shiny/SIA.dashboard")
followees = setDT(read.csv("followees.csv", as.is = T))
country = read.csv("followers_by_country.csv", as.is = T)
country$percent.popn = country$count/country$pop * 100
country$percent.total = round(country$count / sum(country$count) * 100, 3)
country = country %>% arrange(-count)
write.csv(country, "followers_country_count.csv", row.names = F)
country$percent.popn = NULL
country$percent.total = NULL
country = setDT(country[which(country$count >= 1),])
most.countries = setDT(read.csv("most_countries_top_100.csv", as.is = T))
country.top.100 = setDT(read.csv("top_100_per_country.csv", as.is = T))
overall.top.500 = setDT(read.csv("top_500_overall.csv", as.is = T))
colnames(followees)[1] = "followee"
colnames(overall.top.500)[1] = "followee"
setkey(followees, followee)
setkey(country, country)
setkey(most.countries, followee)
setkey(country.top.100, followee)
setkey(country.top.100, country)
setkey(overall.top.500, followee)
most.countries = followees[most.countries]
overall.top.500 = followees[overall.top.500]
country.top.100 = merge(country.top.100, followees, by = "followee")
country.top.100 = merge(country.top.100, country, by = "country")
country.top.100$percent = round(country.top.100$count.x / country.top.100$count.y, 4)*100
colnames(country.top.100)[3] = "count"
most.countries$followee = NULL
overall.top.500$followee = NULL
country.top.100$followee = NULL
write.csv(most.countries %>% arrange(-count), "most_countries.csv", row.names = F)
write.csv(overall.top.500, "overall_top_500.csv", row.names = F)
write.csv(country.top.100 %>% arrange(-percent), "country_top_100.csv", row.names = F)
rm(list = ls())
runApp()
most.countries = setDT(read.csv("most_countries_top_100.csv", as.is = T))
runApp()
runApp()
library(dplyr)
library(data.table)
setwd("~/Schoolwork/NUS/1617 Sem 1/BT2101 IT and Decision Making/bt2101 Group Project/Shiny/SIA.dashboard")
followees = setDT(read.csv("followees.csv", as.is = T))
country = read.csv("followers_by_country.csv", as.is = T)
country$percent.popn = country$count/country$pop * 100
country$percent.total = round(country$count / sum(country$count) * 100, 3)
country = country %>% arrange(-count)
write.csv(country, "followers_country_count.csv", row.names = F)
country$percent.popn = NULL
country$percent.total = NULL
View(country)
library(dplyr)
library(data.table)
setwd("~/Schoolwork/NUS/1617 Sem 1/BT2101 IT and Decision Making/bt2101 Group Project/Shiny/SIA.dashboard")
followees = setDT(read.csv("followees.csv", as.is = T))
country = read.csv("followers_by_country.csv", as.is = T)
country = setDT(country[which(country$count >= 30),])
country$percent.popn = country$count/country$pop * 100
country$percent.total = round(country$count / sum(country$count) * 100, 3)
country = country %>% arrange(-count)
write.csv(country, "followers_country_count.csv", row.names = F)
country$percent.popn = NULL
country$percent.total = NULL
most.countries = setDT(read.csv("most_countries_top_100.csv", as.is = T))
country.top.100 = setDT(read.csv("top_100_per_country.csv", as.is = T))
overall.top.500 = setDT(read.csv("top_500_overall.csv", as.is = T))
colnames(followees)[1] = "followee"
colnames(overall.top.500)[1] = "followee"
setkey(followees, followee)
setkey(country, country)
setkey(most.countries, followee)
setkey(country.top.100, followee)
setkey(country.top.100, country)
setkey(overall.top.500, followee)
most.countries = followees[most.countries]
overall.top.500 = followees[overall.top.500]
country.top.100 = merge(country.top.100, followees, by = "followee")
country.top.100 = merge(country.top.100, country, by = "country")
country.top.100$percent = round(country.top.100$count.x / country.top.100$count.y, 4)*100
colnames(country.top.100)[3] = "count"
most.countries$followee = NULL
overall.top.500$followee = NULL
country.top.100$followee = NULL
write.csv(most.countries %>% arrange(-count), "most_countries.csv", row.names = F)
write.csv(overall.top.500, "overall_top_500.csv", row.names = F)
write.csv(country.top.100 %>% arrange(-percent), "country_top_100.csv", row.names = F)
rm(list = ls())
library(dplyr)
library(data.table)
setwd("~/Schoolwork/NUS/1617 Sem 1/BT2101 IT and Decision Making/bt2101 Group Project/Shiny/SIA.dashboard")
followees = setDT(read.csv("followees.csv", as.is = T))
country = read.csv("followers_by_country.csv", as.is = T)
country = setDT(country[which(country$count >= 30),])
country$percent.popn = country$count/country$pop * 100
country$percent.total = round(country$count / sum(country$count) * 100, 3)
country = country %>% arrange(-count)
write.csv(country, "followers_country_count.csv", row.names = F)
country$percent.popn = NULL
country$percent.total = NULL
most.countries = setDT(read.csv("most_countries_top_100.csv", as.is = T))
country.top.100 = setDT(read.csv("top_100_per_country.csv", as.is = T))
overall.top.500 = setDT(read.csv("top_500_overall.csv", as.is = T))
colnames(followees)[1] = "followee"
colnames(overall.top.500)[1] = "followee"
setkey(followees, followee)
setkey(country, country)
setkey(most.countries, followee)
setkey(country.top.100, followee)
setkey(country.top.100, country)
setkey(overall.top.500, followee)
most.countries = followees[most.countries]
overall.top.500 = followees[overall.top.500]
country.top.100 = merge(country.top.100, followees, by = "followee")
country.top.100 = merge(country.top.100, country, by = "country")
country.top.100$percent = round(country.top.100$count.x / country.top.100$count.y, 4)*100
colnames(country.top.100)[3] = "count"
most.countries$followee = NULL
overall.top.500$followee = NULL
country.top.100$followee = NULL
write.csv(most.countries %>% arrange(-count), "most_countries.csv", row.names = F)
write.csv(overall.top.500, "overall_top_500.csv", row.names = F)
write.csv(country.top.100 %>% arrange(-percent), "country_top_100.csv", row.names = F)
rm(list = ls())
runApp()
library(data.table)
library(dplyr)
library(ggplot2)
library(ggrepel)
library(scales)
library(DT)
library(googleVis)
library(tm)
library(wordcloud)
library(stringr)
reviews = read.csv("CollatedReviews.csv", as.is = T)
tbl = paste(tbl, collapse = "")
tbl = paste(reviews, collapse = "")
myCorpus = Corpus(VectorSource(tbl))
myCorpus = tm_map(myCorpus, content_transformer(tolower))
myCorpus = tm_map(myCorpus, removePunctuation)
myCorpus = tm_map(myCorpus, removeNumbers)
myCorpus = tm_map(myCorpus, removeWords, stopwords("english"))
myCorpus = tm_map(myCorpus, removeWords, c("singapore", "flight", "airline", "airlines", "one", "back", "fly", "sq", strsplit(sub(",", " ", input$filterText), " ")[[1]]))
tdm = TermDocumentMatrix(myCorpus, control = list(wordLengths = c(1, Inf)))
m <- as.matrix(tdm)
myCorpus = tm_map(myCorpus, removeWords, c("singapore", "flight", "airline", "airlines", "one", "back", "fly", "sq"))
tdm = TermDocumentMatrix(myCorpus, control = list(wordLengths = c(1, Inf)))
m <- as.matrix(tdm)
View(tdm)
View(m)
runApp()
dt = setDT(m)
dt = as.data.table(m)
dt
View(dt)
?as.data.frame
df = as.data.frame(m, row.names = row.names(m))
View(df)
